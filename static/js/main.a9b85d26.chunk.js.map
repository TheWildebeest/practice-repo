{"version":3,"sources":["components/Departures/Departures.module.scss","components/Departures/DepartureListing/DepartureListing.module.scss","components/Departures/DeparturesHeading/DeparturesHeading.module.scss","App.module.scss","components/Header/Header.module.scss","assets/images/logo.png","assets/sounds/honk.mp3","components/Map/Map.module.scss","components/Header/index.js","components/Header/Header.jsx","components/Departures/DepartureListing/index.js","components/Departures/DepartureListing/DepartureListing.jsx","components/Departures/DeparturesHeading/index.js","components/Departures/DeparturesHeading/DeparturesHeading.jsx","components/Departures/index.js","components/Departures/Departures.jsx","components/Map/index.js","components/Map/Map.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","playHonk","Audio","honk","play","className","styles","src","logo","alt","onClick","this","data-subheading","red","Component","DepartureListing","props","service","destination","departureTime","Bus","BusService","BusDestination","BusDepartureTime","DeparturesHeading","Heading","Service","Destination","DepartureTime","Departures","listDepartures","departures","map","bus","placeholder","Placeholder","stopName","DeparturesSection","DeparturesTitle","StopName","DeparturesList","Map","_setLocationState","lat","lng","setLocationState","defaultLocation","address","id","bootstrapURLKeys","key","defaultCenter","defaultZoom","layerTypes","App","setState","latitude","Number","Math","round","toString","longitude","filterData","busStopData","Object","entries","departure","line_name","direction","best_departure_estimate","fetchAtcoCode","ID","state","fetch","then","response","json","data","member","atcocode","atcoCode","name","filteredData","catch","error","alert","message","_prevProps","prevState","console","log","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9b85d26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeparturesSection\":\"Departures_DeparturesSection__J7_mq\",\"DeparturesTitle\":\"Departures_DeparturesTitle__2q-4e\",\"StopName\":\"Departures_StopName__FeT5_\",\"DeparturesList\":\"Departures_DeparturesList__3Vsqg\",\"Placeholder\":\"Departures_Placeholder__2URZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bus\":\"DepartureListing_Bus__3-sQZ\",\"BusService\":\"DepartureListing_BusService__sWAAk\",\"BusDestination\":\"DepartureListing_BusDestination__1AKPl\",\"BusDepartureTime\":\"DepartureListing_BusDepartureTime__2MD5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Heading\":\"DeparturesHeading_Heading__25uK0\",\"Service\":\"DeparturesHeading_Service__3Q0or\",\"Destination\":\"DeparturesHeading_Destination__1oy1S\",\"DepartureTime\":\"DeparturesHeading_DepartureTime__3M-NE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"App_Main__2OaS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2kLgA\",\"red\":\"Header_red__3_rt-\"};","module.exports = __webpack_public_path__ + \"static/media/logo.7b591356.png\";","module.exports = __webpack_public_path__ + \"static/media/honk.8999d3ee.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Map\":\"Map_Map__15Iv9\"};","import Header from \"./Header\";\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport styles from \"./Header.module.scss\";\nimport logo from '../../assets/images/logo.png';\nimport honk from '../../assets/sounds/honk.mp3'\n\nclass Header extends Component {\n\n  playHonk = () => {\n    const sound = new Audio(honk);\n    sound.play();\n  }\n  render() {\n    return (\n      <header className={styles.Header}>\n        <img src={logo} alt=\"omnibus logo\" onClick={this.playHonk} />\n        <h1 data-subheading={\"departures happening near you\"}>OMNI<span className={styles.red}>BUS</span> LIVE</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import DepartureListing from \"./DepartureListing\";\n\nexport default DepartureListing;\n","import React, { Component } from \"react\";\nimport styles from \"./DepartureListing.module.scss\";\n\nclass DepartureListing extends Component {\n  render() {\n    const { service, destination, departureTime } = this.props;\n    return (\n      <hgroup className={styles.Bus}>\n        <h3 className={styles.BusService}>{service}</h3>\n        <h3 className={styles.BusDestination}>{destination}</h3>\n        <h3 className={styles.BusDepartureTime}>{departureTime}</h3>\n      </hgroup>\n    );\n  }\n}\n\nexport default DepartureListing;\n","import DeparturesHeading from \"./DeparturesHeading\";\n\nexport default DeparturesHeading;\n","import React, { Component } from \"react\";\nimport styles from \"./DeparturesHeading.module.scss\";\n\nclass DeparturesHeading extends Component {\n  render() {\n    const { service, destination, departureTime } = this.props;\n    return (\n      <hgroup className={styles.Heading}>\n        <h3 className={styles.Service}>{service}</h3>\n        <h3 className={styles.Destination}>{destination}</h3>\n        <h3 className={styles.DepartureTime}>{departureTime}</h3>\n      </hgroup>\n    );\n  }\n}\n\nexport default DeparturesHeading;\n","import Departures from \"./Departures\";\n\nexport default Departures;\n","import React, { Component } from \"react\";\nimport styles from \"./Departures.module.scss\";\nimport DepartureListing from './DepartureListing';\nimport DeparturesHeading from './DeparturesHeading';\n\nclass Departures extends Component {\n\n  listDepartures = (departures) => {\n    return (\n      <>\n        <DeparturesHeading service={\"Service\"} destination={\"Destination\"} departureTime={\"Departing\"} />\n        {departures.map(bus => {\n          return <DepartureListing\n            service={bus.service ? bus.service : \"\"}\n            destination={bus.destination ? bus.destination : \"\"}\n            departureTime={bus.departureTime ? bus.departureTime : \"\"}\n          />\n        })\n        }\n      </>\n    )\n  }\n\n  placeholder = () => {\n    return <h3 className={styles.Placeholder}>Live departures will show here!</h3>\n  }\n\n  render() {\n    const { stopName, departures } = this.props;\n    return (\n      <section className={styles.DeparturesSection}>\n        <div className={styles.DeparturesTitle}>\n          <h2 className={styles.StopName}>{stopName ? stopName : \"Click anywhere on the map to get started\"}</h2>\n        </div>\n        <div className={styles.DeparturesList}>\n          {departures[0] && departures[0].service ? this.listDepartures(departures) : this.placeholder()}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Departures;\n","import Map from \"./Map\";\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport styles from \"./Map.module.scss\";\nimport GoogleMapReact from 'google-map-react';\n\nclass Map extends Component {\n  _setLocationState = ({ lat, lng }) => {\n    this.props.setLocationState(lat, lng);\n  }\n\n  defaultLocation = {\n    address: 'London',\n    lat: 51.501904,\n    lng: -0.115871,\n  }\n\n  render() {\n    return (\n      <section id={styles.Map}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyB9SARU4o0HtipTD3Z6qIqDQ5lg9ZRp_ok' }}\n          defaultCenter={this.defaultLocation}\n          defaultZoom={11}\n          layerTypes={['TransitLayer']}\n          onClick={this._setLocationState}\n        >\n\n        </GoogleMapReact>\n      </section>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from 'react';\nimport styles from './App.module.scss';\nimport Header from './components/Header';\nimport Departures from './components/Departures';\nimport Map from './components/Map';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: 51.489165,\n      longitude: -0.142499,\n      stopName: \"\",\n      departures: [\n        {\n          service: \"\",\n          destination: \"\",\n          departureTime: \"\"\n        },\n        {\n          service: \"\",\n          destination: \"\",\n          departureTime: \"\"\n        },\n      ]\n    }\n  };\n\n  setLocationState = (lat, lng) => {\n    this.setState({ latitude: Number(Math.round(lat + 'e6') + 'e-6').toString(), longitude: Number(Math.round(lng + 'e6') + 'e-6').toString() })\n  }\n\n  filterData = (busStopData) => {\n    let departures = Object.entries(busStopData.departures);\n    departures = departures.map(departure => departure[1][0]);\n    return departures.map(bus => {\n      const departure = {\n        service: bus.line_name,\n        destination: bus.direction,\n        departureTime: bus.best_departure_estimate\n      };\n      return departure;\n    })\n  }\n\n  fetchAtcoCode = () => {\n    const key = \"22da4709b682eb9ec88c9e39e2ce4cc7\";\n    const ID = \"26bf3c4f\";\n    const { latitude, longitude } = this.state;\n    fetch(`http://transportapi.com/v3/uk/places.json?places.json?&app_id=${ID}&app_key=${key}&lat=${latitude}&lon=${longitude}&type=bus_stop`)\n      .then(response => response.json())\n      .then(data => data.member[0].atcocode)\n      .then(atcoCode => {\n        return fetch(`http://transportapi.com/v3/uk/bus/stop/${atcoCode}/live.json?app_id=${ID}&app_key=${key}&group=route&limit=1&nextbuses=no`)\n          .then(response => response.json())\n      })\n      .then(data => {\n        this.setState({ stopName: data.name });\n        return data;\n      })\n      .then(data => this.filterData(data))\n      .then(filteredData => this.setState({ departures: filteredData }))\n      .catch(error => alert(error.message));\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if ((this.state.latitude !== prevState.latitude) || (this.state.longitude !== prevState.longitude)) {\n      this.fetchAtcoCode();\n      console.log(\"Bus stop updated\");\n    } else console.log(\"No change\");\n  }\n\n  render() {\n    const { stopName, departures } = this.state;\n    return (\n      <div className={styles.App} >\n        <Header />\n        <main className={styles.Main}>\n          <Departures stopName={stopName} departures={departures} />\n          <Map setLocationState={this.setLocationState} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}